const backendURL = "https://postly-backend-rbc0.onrender.com"; // your live backend URLlet nickname = localStorage.getItem("postly_nickname") || "";const nicknamePrompt = document.getElementById("nicknamePrompt");const nicknameInput = document.getElementById("nicknameInput");const mainContent = document.getElementById("mainContent");const uploadForm = document.getElementById("uploadForm");const feed = document.getElementById("feed");// Save nickname and continue to appfunction saveNickname() {  const value = nicknameInput.value.trim();  if (!value) return alert("Please enter a nickname.");  nickname = value;  localStorage.setItem("postly_nickname", nickname);  nicknamePrompt.classList.add("hidden");  mainContent.classList.remove("hidden");  fetchFeed();}// If nickname exists already, skip promptif (nickname) {  nicknamePrompt.classList.add("hidden");  mainContent.classList.remove("hidden");  fetchFeed();}// Upload form submituploadForm.addEventListener("submit", async (e) => {  e.preventDefault();  const text = document.getElementById("postText").value.trim();  const videoFile = document.getElementById("videoInput").files[0];  if (!text && !videoFile) {    alert("Please add text or a video.");    return;  }  const formData = new FormData();  formData.append("nickname", nickname);  formData.append("text", text);  if (videoFile) formData.append("video", videoFile);  try {    const res = await fetch(`${backendURL}/upload`, {      method: "POST",      body: formData    });    if (!res.ok) throw new Error("Upload failed.");    document.getElementById("postText").value = "";    document.getElementById("videoInput").value = "";    fetchFeed();  } catch (err) {    alert("Upload error. Please try again.");    console.error(err);  }});// Fetch postsasync function fetchFeed() {  feed.innerHTML = "<p>Loading posts...</p>";  try {    const res = await fetch(`${backendURL}/feed`);    const data = await res.json();    if (!Array.isArray(data)) throw new Error("Invalid feed");    feed.innerHTML = "";    data.forEach(renderPost);  } catch (err) {    feed.innerHTML = "<p>Error loading feed.</p>";    console.error(err);  }}// Render one postfunction renderPost(post) {  const div = document.createElement("div");  div.className = "post";  const h3 = document.createElement("h3");  h3.textContent = post.nickname;  const p = document.createElement("p");  p.textContent = post.text;  const meta = document.createElement("div");  meta.className = "meta";  const time = new Date(post.createdAt).toLocaleString();  meta.textContent = `Posted on ${time}`;  const actions = document.createElement("div");  actions.className = "actions";  const likeBtn = document.createElement("button");  likeBtn.className = "like-btn";  likeBtn.textContent = `?? Like`;  likeBtn.onclick = () => {    likeBtn.textContent = `?? Liked`;    likeBtn.disabled = true;  };  const favBtn = document.createElement("button");  favBtn.className = "favorite-btn";  favBtn.textContent = `? Favorite`;  favBtn.onclick = () => {    favBtn.textContent = `? Saved`;    favBtn.disabled = true;  };  actions.appendChild(likeBtn);  actions.appendChild(favBtn);  div.appendChild(h3);  if (post.text) div.appendChild(p);  if (post.videoPath) {    const video = document.createElement("video");    video.src = `${backendURL}${post.videoPath}`;    video.controls = true;    div.appendChild(video);  }  div.appendChild(actions);  div.appendChild(meta);  feed.appendChild(div);}